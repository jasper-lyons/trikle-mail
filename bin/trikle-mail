#! /usr/bin/env ruby
require 'commander'
require 'mandrill'
require 'csv'
require 'mail'
require 'triklemailer'

class TrikleMail
  extend Commander::Methods

  program :name, 'Trikle Mail'
  program :version, Triklemailer::VERSION
  program :description, 'Send your bulk email from the cli in a trikle'

  default_command :smtp

  command :smtp do |c|
    c.syntax = 'trikle-mail csv_of_emails.csv [options]'
    c.description = 'Send a message to each email in the csv using the template'
    c.option '--host STRING', String, 'The host of the mail server e.g. <mail.gmail.com>'
    c.option '--port INTEGER', Integer, 'Port number of the mail server e.g. 587'
    c.option '--username STRING', String, 'Username to authenticate with mail server'
    c.option '--password STRING', String, 'Password to authenticate with mail server'
    c.option '--from STRING', String, 'The email address to send the email from'
    c.option '--template STRING', String, 'The template to use to send the message'
    c.option '--html', 'toggle using html to format email, defaults to no'
    c.option '--subject STRING', String, 'The subject line of the message'
    c.option '--hours INTEGER', Integer, 'The number of hours over which to send the emails'
    c.option '--minutes INTEGER', Integer, 'The number of minutes over which to send the emails'

    c.action do |args, options|
      recipients = CSV.new(args[0], headers: true).map(&:to_h)
      sent_file_name = ['sent', options.template.split('.').first].join('_')
      sent = CSV.new(sent_file_name, headers: true).map { |r| r[:email] }

      mail_options = Triklemailer::Options.new(
        template: File.read(options.template),
        template_name: options.template,
        is_html: options.template.end_with?('html'),
        from: options.from,
        subject: options.subject
      )

      Triklemailer.send_mail(mail_options, recipients, sent)
    end
  end
end

TrikleMail.run!
